@inject NavigationManager NavigationManager
@inject SignInManager<IdentityUser> SignInManager

@using Microsoft.AspNetCore.Identity

<AuthorizeView>
    <Authorized>
        <li class="nav-item col-6 col-md-auto">
            <a class="nav-link" href="/authentication/profile">Hello, @context.User.Identity?.Name!</a>
        </li>

        <li class="nav-item col-6 col-md-auto">
            <EditForm Context="ctx" FormName="LogoutForm" method="post" Model="@Foo" OnValidSubmit="BeginSignOut">
                <button type="submit" class="nav-link border-0">Log out</button>
            </EditForm>
        </li>
    </Authorized>
    <NotAuthorized>
        <li class="nav-item col-6 col-md-auto">
            <a class="nav-link" href="/authentication/register">Register</a>              
        </li>

        <li class="nav-item col-6 col-md-auto">
            <a class="nav-link" href="/authentication/login">Log in</a>
        </li>
    </NotAuthorized>
</AuthorizeView>

@code{
    [SupplyParameterFromForm(Name = "LogoutForm")]
    public string? Foo {  get; set; }

    protected override void OnInitialized() => Foo = "";

    async Task BeginSignOut()
    {
        await SignInManager.SignOutAsync();
        NavigationManager.NavigateTo("/authentication/logout");
    }
}