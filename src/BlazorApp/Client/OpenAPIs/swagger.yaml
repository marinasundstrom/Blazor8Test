x-generator: NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: BlazorApp API
  version: 1.0.0
servers:
- url: https://localhost:7188
paths:
  /requires-auth:
    get:
      tags:
      - BlazorApp
      operationId: BlazorApp_RequiresAuth
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/weatherforecast:
    get:
      tags:
      - WeatherForecast
      operationId: WeatherForecast_GetWeatherForecast
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
        400:
          description: ''
  /identity/register:
    post:
      tags:
      - Identity
      operationId: PostIdentityRegister
      requestBody:
        x-name: registration
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        x-position: 1
      responses:
        200:
          description: ''
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
  /identity/login:
    post:
      tags:
      - Identity
      operationId: PostIdentityLogin
      parameters:
      - name: cookieMode
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 2
      - name: persistCookies
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 3
      requestBody:
        x-name: login
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
  /identity/refresh:
    post:
      tags:
      - Identity
      operationId: PostIdentityRefresh
      requestBody:
        x-name: refreshRequest
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
  /identity/confirmEmail:
    get:
      tags:
      - Identity
      operationId: MapIdentityApi-/identity/confirmEmail
      parameters:
      - name: userId
        in: query
        schema:
          type: string
        x-position: 1
      - name: code
        in: query
        schema:
          type: string
        x-position: 2
      - name: changedEmail
        in: query
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
  /identity/resendConfirmationEmail:
    post:
      tags:
      - Identity
      operationId: PostIdentityResendConfirmationEmail
      requestBody:
        x-name: resendRequest
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailRequest'
        x-position: 1
      responses:
        200:
          description: ''
  /identity/resetPassword:
    post:
      tags:
      - Identity
      operationId: PostIdentityResetPassword
      requestBody:
        x-name: resetRequest
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        x-position: 1
      responses:
        200:
          description: ''
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
  /identity/account/2fa:
    get:
      tags:
      - Identity
      operationId: GetIdentityAccount2fa
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorResponse'
        404:
          description: ''
    post:
      tags:
      - Identity
      operationId: PostIdentityAccount2fa
      requestBody:
        x-name: tfaRequest
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwoFactorRequest'
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorResponse'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        404:
          description: ''
  /identity/account/info:
    get:
      tags:
      - Identity
      operationId: GetIdentityAccountInfo
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        404:
          description: ''
    post:
      tags:
      - Identity
      operationId: PostIdentityAccountInfo
      requestBody:
        x-name: infoRequest
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfoRequest'
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        404:
          description: ''
components:
  schemas:
    WeatherForecast:
      type: object
      additionalProperties: false
      properties:
        date:
          type: string
          format: date
        temperatureC:
          type: integer
          format: int32
        summary:
          type: string
          nullable: true
        temperatureF:
          type: integer
          format: int32
    HttpValidationProblemDetails:
      allOf:
      - $ref: '#/components/schemas/ProblemDetails'
      - type: object
        additionalProperties:
          nullable: true
        properties:
          errors:
            type: object
            additionalProperties:
              type: array
              items:
                type: string
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    RegisterRequest:
      type: object
      additionalProperties: false
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    AccessTokenResponse:
      type: object
      additionalProperties: false
      properties:
        token_type:
          type: string
        access_token:
          type: string
        expires_in:
          type: integer
          format: int64
        refresh_token:
          type: string
    LoginRequest:
      type: object
      additionalProperties: false
      properties:
        username:
          type: string
        password:
          type: string
        twoFactorCode:
          type: string
          nullable: true
        twoFactorRecoveryCode:
          type: string
          nullable: true
    RefreshRequest:
      type: object
      additionalProperties: false
      properties:
        refreshToken:
          type: string
    ResendEmailRequest:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
    ResetPasswordRequest:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
        resetCode:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
    TwoFactorResponse:
      type: object
      additionalProperties: false
      properties:
        sharedKey:
          type: string
        recoveryCodesLeft:
          type: integer
          format: int32
        recoveryCodes:
          type: array
          nullable: true
          items:
            type: string
        isTwoFactorEnabled:
          type: boolean
        isMachineRemembered:
          type: boolean
    TwoFactorRequest:
      type: object
      additionalProperties: false
      properties:
        enable:
          type: boolean
          nullable: true
        twoFactorCode:
          type: string
          nullable: true
        resetSharedKey:
          type: boolean
        resetRecoveryCodes:
          type: boolean
        forgetMachine:
          type: boolean
    InfoResponse:
      type: object
      additionalProperties: false
      properties:
        username:
          type: string
        email:
          type: string
        claims:
          type: object
          additionalProperties:
            type: string
    InfoRequest:
      type: object
      additionalProperties: false
      properties:
        newUsername:
          type: string
          nullable: true
        newEmail:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
        oldPassword:
          type: string
          nullable: true
